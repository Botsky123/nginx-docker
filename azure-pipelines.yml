# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'docker_registry_service_connection'
  imageRepository: 'botskynginxdocker'
  dockerfilePath: '$(Build.SourcesDirectory)/ACRTasks/dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
  clair_db: 'arminc/clair-db:latest'
  clair_scan: 'arminc/clair-local-scan:latest'
  report_directory: 'report'

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        tags: |
          $(tag)

    - script: |
        docker save -o $(imageRepository).tar $(imageRepository):$(tag)
      displayName: 'Save Docker image to tarball'

    - script: |
        wget https://github.com/arminc/clair-scanner/releases/download/v12/clair-scanner_linux_amd64
        mv clair-scanner_linux_amd64 clair-scanner
        chmod +x clair-scanner
      displayName: 'Install clair-scanner'

    - script: |
        ./clair-scanner -c http://localhost:6060 --ip $(hostname -i) -r $(Build.SourcesDirectory)/$(report_directory)/scan-report.json $(imageRepository).tar || true
      displayName: 'Scan Docker image with clair-scanner'

    - script: |
        if grep -q "High" scan-report.json; then
          echo "High vulnerabilities found, failing build"
          exit 1
        fi
      displayName: 'Check for vulnerabilities'

    - script: |
        docker stop clair
        docker rm clair
        docker stop clair-db
        docker rm clair-db
      displayName: 'Stop Clair services'
    continueOnError: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish vulnerabilities report'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'VulnerabilitiesReport'
      publishLocation: 'Container'

  
